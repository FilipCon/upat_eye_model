<?xml version="1.0" encoding="UTF-8" ?>
<OpenSimDocument Version="30516">
	<Model name="UPAT_Eye_Model_Passive_Pulleys_v4">
		<!--The model's ground reference frame.-->
		<Ground name="ground">
			<!--List of components that this component owns and serializes.-->
			<components>
				<PhysicalOffsetFrame name="ground_geom_frame_1">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="ground_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1 1 1</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>ground_skull.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
					<socket_parent_connectee_name>..</socket_parent_connectee_name>
					<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
					<translation>-0.070000000000000007 -0.17799999999999999 -0.031</translation>
					<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
					<orientation>-0 0 -0</orientation>
				</PhysicalOffsetFrame>
				<PhysicalOffsetFrame name="ground_geom_frame_2">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="ground_geom_2">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>1 1 1</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>ground_jaw.vtp</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
					<socket_parent_connectee_name>..</socket_parent_connectee_name>
					<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
					<translation>-0.070000000000000007 -0.17799999999999999 -0.031</translation>
					<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
					<orientation>-0 0 -0</orientation>
				</PhysicalOffsetFrame>
			</components>
			<!--The geometry used to display the axes of this Frame.-->
			<FrameGeometry name="frame_geometry">
				<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
				<socket_frame_connectee_name>..</socket_frame_connectee_name>
				<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
				<input_transform_connectee_name></input_transform_connectee_name>
				<!--Scale factors in X, Y, Z directions respectively.-->
				<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
			</FrameGeometry>
			<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
			<attached_geometry />
		</Ground>
		<!--Acceleration due to gravity, expressed in ground.-->
		<gravity>0 -9.8065999999999995 0</gravity>
		<!--Credits (e.g., model author names) associated with the model.-->
		<credits>The model was created by Constantinos Filip as part of the course requirement in Modeling and Simulation (Biomedical Engineering, University of Patras) 2018. The mode is based on J. Iskander et al. 2018. The OpenSim controller plugin were prepared in collaboration with Dimitar Stanev. License: Creative Commons (CCBY 4.0). You are free to distribute, remix, tweak, and build upon this work, even commercially, as long as you credit us for the original creation (http://creativecommons.org/licenses/by/4.0/). SimTK project: https://simtk.org/projects/eye</credits>
		<!--Publications and references associated with the model.-->
		<publications>K. Filip, D. Stanev, and K. Moustakas (2018). An Open-Source OpenSim Oculomotor Model for Kinematics and Dynamics Simulation, arXiv:1807.07332 [physics.bio-ph]. Iskander, J., Hossny, M., Nahavandi, S., del Porto, L., Porto, L. (2018). An ocular biomechanic model for dynamic simulation of different eye movements. Journal of Biomechanics. https://doi.org/10.1016/j.jbiomech.2018.02.006.</publications>
		<!--Units for all lengths.-->
		<length_units>meters</length_units>
		<!--Units for all forces.-->
		<force_units>N</force_units>
		<!--List of bodies that make up this model.-->
		<BodySet>
			<objects>
				<Body name="r_eye">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="r_eye_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.001 0.001 0.001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>sclera.obj</mesh_file>
						</Mesh>
						<Mesh name="r_eye_geom_2">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.001 0.001 0.001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>pupil.obj</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--Set of wrap objects fixed to this body that GeometryPaths can wrap over.This property used to be a member of Body but was moved up with the introduction of Frames.-->
					<WrapObjectSet>
						<objects>
							<WrapEllipsoid name="right_eye_wrap">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0.78539999999999999 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0 0 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.012 0.012 0.012</dimensions>
							</WrapEllipsoid>
							<WrapEllipsoid name="right_eye_wrap2">
								<!--Whether or not the WrapObject is considered active in computing paths-->
								<active>true</active>
								<!--Body-fixed Euler angle sequence for the orientation of the WrapObject-->
								<xyz_body_rotation>0 0 0</xyz_body_rotation>
								<!--Translation of the WrapObject.-->
								<translation>0 0 0</translation>
								<!--The name of quadrant over which the wrap object is active. For example, '+x' or '-y' to set the sidedness of the wrapping.-->
								<quadrant>all</quadrant>
								<!--Default appearance for this Geometry-->
								<Appearance>
									<!--Flag indicating whether the associated Geometry is visible or hidden.-->
									<visible>false</visible>
									<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
									<opacity>0.5</opacity>
									<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
									<color>0 1 1</color>
									<!--Visuals applied to surfaces associated with this Appearance.-->
									<SurfaceProperties>
										<!--The representation (1:Points, 2:Wire, 3:Shaded) used to display the object.-->
										<representation>3</representation>
									</SurfaceProperties>
								</Appearance>
								<dimensions> 0.012 0.012 0.012</dimensions>
							</WrapEllipsoid>
						</objects>
						<groups />
					</WrapObjectSet>
					<!--The mass of the body (kg)-->
					<mass>0.0074999999999999997</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 0 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>4.32e-07 4.32e-07 4.32e-07 0 0 0</inertia>
				</Body>
				<Body name="l_eye">
					<!--The geometry used to display the axes of this Frame.-->
					<FrameGeometry name="frame_geometry">
						<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
						<socket_frame_connectee_name>..</socket_frame_connectee_name>
						<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
						<input_transform_connectee_name></input_transform_connectee_name>
						<!--Scale factors in X, Y, Z directions respectively.-->
						<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
					</FrameGeometry>
					<!--List of geometry attached to this Frame. Note, the geometry are treated as fixed to the frame and they share the transform of the frame when visualized-->
					<attached_geometry>
						<Mesh name="l_eye_geom_1">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.001 0.001 0.001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>sclera.obj</mesh_file>
						</Mesh>
						<Mesh name="l_eye_geom_2">
							<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
							<socket_frame_connectee_name>..</socket_frame_connectee_name>
							<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
							<input_transform_connectee_name></input_transform_connectee_name>
							<!--Scale factors in X, Y, Z directions respectively.-->
							<scale_factors>0.001 0.001 0.001</scale_factors>
							<!--Default appearance attributes for this Geometry-->
							<Appearance>
								<!--The opacity used to display the geometry between 0:transparent, 1:opaque.-->
								<opacity>1</opacity>
								<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
								<color>1 1 1</color>
							</Appearance>
							<!--Name of geometry file.-->
							<mesh_file>pupil.obj</mesh_file>
						</Mesh>
					</attached_geometry>
					<!--The mass of the body (kg)-->
					<mass>0.0074999999999999997</mass>
					<!--The location (Vec3) of the mass center in the body frame.-->
					<mass_center>0 0 0</mass_center>
					<!--The elements of the inertia tensor (Vec6) as [Ixx Iyy Izz Ixy Ixz Iyz] measured about the mass_center and not the body origin.-->
					<inertia>4.32e-07 4.32e-07 4.32e-07 0 0 0</inertia>
				</Body>
			</objects>
		</BodySet>
		<!--List of joints that connect the bodies.-->
		<JointSet>
			<objects>
				<CustomJoint name="Right_Eye_Joint">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>../ground</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../r_eye</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="r_eye_add_abd">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.69813199999999997 0.69813199999999997</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="r_eye_sup_inf">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.69813199999999997 0.69813199999999997</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="r_eye_inc_exc">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.17453299999999999 0.17453299999999999</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>r_eye_add_abd</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>r_eye_sup_inf</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>r_eye_inc_exc</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
				<CustomJoint name="Left_Eye_Joint">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The parent frame for the joint.).-->
					<socket_parent_frame_connectee_name>ground_offset</socket_parent_frame_connectee_name>
					<!--Path to a Component that satisfies the Socket 'child_frame' of type PhysicalFrame (description: The child frame for the joint.).-->
					<socket_child_frame_connectee_name>../l_eye</socket_child_frame_connectee_name>
					<!--List containing the generalized coordinates (q's) that parameterize this joint.-->
					<coordinates>
						<Coordinate name="l_eye_add_abd">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.69813199999999997 0.69813199999999997</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="l_eye_sup_inf">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.69813199999999997 0.69813199999999997</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
						<Coordinate name="l_eye_inc_exc">
							<!--The value of this coordinate before any value has been set. Rotational coordinate value is in radians and Translational in meters.-->
							<default_value>0</default_value>
							<!--The speed value of this coordinate before any value has been set. Rotational coordinate value is in rad/s and Translational in m/s.-->
							<default_speed_value>0</default_speed_value>
							<!--The minimum and maximum values that the coordinate can range between. Rotational coordinate range in radians and Translational in meters.-->
							<range>-0.17453299999999999 0.17453299999999999</range>
							<!--Flag indicating whether or not the values of the coordinates should be limited to the range, above.-->
							<clamped>false</clamped>
							<!--Flag indicating whether or not the values of the coordinates should be constrained to the current (e.g. default) value, above.-->
							<locked>false</locked>
							<!--If specified, the coordinate can be prescribed by a function of time. It can be any OpenSim Function with valid second order derivatives.-->
							<prescribed_function />
							<!--Flag indicating whether or not the values of the coordinates should be prescribed according to the function above. It is ignored if the no prescribed function is specified.-->
							<prescribed>false</prescribed>
						</Coordinate>
					</coordinates>
					<!--Physical offset frames owned by the Joint that are typically used to satisfy the owning Joint's parent and child frame connections (sockets). PhysicalOffsetFrames are often used to describe the fixed transformation from a Body's origin to another location of interest on the Body (e.g., the joint center). When the joint is deleted, so are the PhysicalOffsetFrame components in this list.-->
					<frames>
						<PhysicalOffsetFrame name="ground_offset">
							<!--The geometry used to display the axes of this Frame.-->
							<FrameGeometry name="frame_geometry">
								<!--Path to a Component that satisfies the Socket 'frame' of type Frame.-->
								<socket_frame_connectee_name>..</socket_frame_connectee_name>
								<!--Path to an output (channel) to satisfy the one-value Input 'transform' of type SimTK::Transform (description: The transform that positions the Geometry in Ground so it can be positioned. Note, either the Geometry is attached to a Frame OR the input transform can be supplied, but not both. ).-->
								<input_transform_connectee_name></input_transform_connectee_name>
								<!--Scale factors in X, Y, Z directions respectively.-->
								<scale_factors>0.20000000000000001 0.20000000000000001 0.20000000000000001</scale_factors>
							</FrameGeometry>
							<!--Path to a Component that satisfies the Socket 'parent' of type C (description: The parent frame to this frame.).-->
							<socket_parent_connectee_name>../../ground</socket_parent_connectee_name>
							<!--Translational offset (in meters) of this frame's origin from the parent frame's origin, expressed in the parent frame.-->
							<translation>0 0 -0.062</translation>
							<!--Orientation offset (in radians) of this frame in its parent frame, expressed as a frame-fixed x-y-z rotation sequence.-->
							<orientation>0 0 0</orientation>
						</PhysicalOffsetFrame>
					</frames>
					<!--Defines how the child body moves with respect to the parent as a function of the generalized coordinates.-->
					<SpatialTransform>
						<!--3 Axes for rotations are listed first.-->
						<TransformAxis name="rotation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>l_eye_add_abd</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>l_eye_sup_inf</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<TransformAxis name="rotation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates>l_eye_inc_exc</coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<LinearFunction name="function">
								<coefficients> 1 0</coefficients>
							</LinearFunction>
						</TransformAxis>
						<!--3 Axes for translations are listed next.-->
						<TransformAxis name="translation1">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>1 0 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation2">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 1 0</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
						<TransformAxis name="translation3">
							<!--Names of the coordinates that serve as the independent variables         of the transform function.-->
							<coordinates></coordinates>
							<!--Rotation or translation axis for the transform.-->
							<axis>0 0 1</axis>
							<!--Transform function of the generalized coordinates used to        represent the amount of displacement along a specified axis.-->
							<Constant name="function">
								<value>0</value>
							</Constant>
						</TransformAxis>
					</SpatialTransform>
				</CustomJoint>
			</objects>
		</JointSet>
		<!--Controllers that provide the control inputs for Actuators.-->
		<ControllerSet>
			<objects>
				<FixationController name="fixation_controller">
					<!--fixation target angle horizontal axis (in degrees)-->
					<thetaH>15</thetaH>
					<!--fixation target angle vertical axis (in degrees)-->
					<thetaV>-15</thetaV>
					<!--horizontal position tracking gain-->
					<kpH>50</kpH>
					<!--horizontal velocity tracking gain-->
					<kdH>1.5</kdH>
					<!--vertical position tracking gain-->
					<kpV>50</kpV>
					<!--vertical velocity tracking gain-->
					<kdV>1.5</kdV>
					<!--torsion position tracking gain-->
					<kpT>100</kpT>
					<!--torsion velocity tracking gain-->
					<kdT>0.5</kdT>
					<!--saccade onset (s)-->
					<saccade_onset>0.5</saccade_onset>
					<!--desired saccade velocity (deg / s)-->
					<saccade_velocity>100</saccade_velocity>
				</FixationController>
			</objects>
			<groups />
		</ControllerSet>
		<!--Constraints in the model.-->
		<ConstraintSet>
			<objects>
				<CoordinateCouplerConstraint name="l_eye_add_abd_con">
					<!--Flag indicating whether the constraint is enforced or not.Enforced means that the constraint is active in subsequent dynamics realizations. NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant the constraint was not being enforced. Thus, if 'isDisabled' is'true', then 'isEnforced' is false.-->
					<isEnforced>true</isEnforced>
					<!--Constraint function of generalized coordinates (to be specified) used to evaluate the constraint errors and their derivatives, and must valid to at least 2nd order. Constraint function must evaluate to zero when coordinates satisfy the constraint.-->
					<coupled_coordinates_function>
						<LinearFunction>
							<coefficients> 1 0</coefficients>
						</LinearFunction>
					</coupled_coordinates_function>
					<!--List of names of the right hand side (independent) coordinates. Note the constraint function above, must be able to handle multiple coordinate values if more than one coordinate name is provided.-->
					<independent_coordinate_names>r_eye_add_abd</independent_coordinate_names>
					<!--Name of the left-hand side (dependent) coordinate of the constraint coupling function.-->
					<dependent_coordinate_name>l_eye_add_abd</dependent_coordinate_name>
					<!--Scale factor for the coupling function.-->
					<scale_factor>1</scale_factor>
				</CoordinateCouplerConstraint>
				<CoordinateCouplerConstraint name="l_eye_sup_inf_con">
					<!--Flag indicating whether the constraint is enforced or not.Enforced means that the constraint is active in subsequent dynamics realizations. NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant the constraint was not being enforced. Thus, if 'isDisabled' is'true', then 'isEnforced' is false.-->
					<isEnforced>true</isEnforced>
					<!--Constraint function of generalized coordinates (to be specified) used to evaluate the constraint errors and their derivatives, and must valid to at least 2nd order. Constraint function must evaluate to zero when coordinates satisfy the constraint.-->
					<coupled_coordinates_function>
						<LinearFunction>
							<coefficients> 1 0</coefficients>
						</LinearFunction>
					</coupled_coordinates_function>
					<!--List of names of the right hand side (independent) coordinates. Note the constraint function above, must be able to handle multiple coordinate values if more than one coordinate name is provided.-->
					<independent_coordinate_names>r_eye_sup_inf</independent_coordinate_names>
					<!--Name of the left-hand side (dependent) coordinate of the constraint coupling function.-->
					<dependent_coordinate_name>l_eye_sup_inf</dependent_coordinate_name>
					<!--Scale factor for the coupling function.-->
					<scale_factor>1</scale_factor>
				</CoordinateCouplerConstraint>
				<CoordinateCouplerConstraint name="l_eye_inc_exc_con">
					<!--Flag indicating whether the constraint is enforced or not.Enforced means that the constraint is active in subsequent dynamics realizations. NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant the constraint was not being enforced. Thus, if 'isDisabled' is'true', then 'isEnforced' is false.-->
					<isEnforced>true</isEnforced>
					<!--Constraint function of generalized coordinates (to be specified) used to evaluate the constraint errors and their derivatives, and must valid to at least 2nd order. Constraint function must evaluate to zero when coordinates satisfy the constraint.-->
					<coupled_coordinates_function>
						<LinearFunction>
							<coefficients> 1 0</coefficients>
						</LinearFunction>
					</coupled_coordinates_function>
					<!--List of names of the right hand side (independent) coordinates. Note the constraint function above, must be able to handle multiple coordinate values if more than one coordinate name is provided.-->
					<independent_coordinate_names>r_eye_inc_exc</independent_coordinate_names>
					<!--Name of the left-hand side (dependent) coordinate of the constraint coupling function.-->
					<dependent_coordinate_name>l_eye_inc_exc</dependent_coordinate_name>
					<!--Scale factor for the coupling function.-->
					<scale_factor>1</scale_factor>
				</CoordinateCouplerConstraint>
			</objects>
			<groups />
		</ConstraintSet>
		<!--Forces in the model (includes Actuators).-->
		<ForceSet>
			<objects>
				<Millard2012EquilibriumMuscle name="r_Lateral_Rectus">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RLR-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.034000000000000002 0.00059999999999999995 -0.012999999999999999</location>
								</PathPoint>
								<PathPoint name="RRL-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.010200000000000001 0.00029999999999999997 0.012</location>
								</PathPoint>
								<PathPoint name="RLR-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0064999999999999997 0 0.0101</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1.4710000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.048980000000000003</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0083999999999999995</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>3.8483999999999998</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.051299999999999998</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<Millard2012EquilibriumMuscle name="r_Medial_Rectus">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RMR-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.029999999999999999 0.00059999999999999995 -0.017000000000000001</location>
								</PathPoint>
								<PathPoint name="RML-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0053 0.00013999999999999999 -0.0146</location>
								</PathPoint>
								<PathPoint name="RMR-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0088000000000000005 0 -0.0095999999999999992</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>1 1 1</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1.5740000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.040840000000000001</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0038</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>4.6154999999999999</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.039800000000000002</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<Millard2012EquilibriumMuscle name="r_Superior_Rectus">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RSR-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.031699999999999999 0.0035999999999999999 -0.016</location>
								</PathPoint>
								<PathPoint name="RSL-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0091999999999999998 0.012 -0.002</location>
								</PathPoint>
								<PathPoint name="RSR-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0076 0.0104 0</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1.1768000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.04487</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0054000000000000003</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>4.2008999999999999</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.044949999999999997</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<Millard2012EquilibriumMuscle name="r_Inferior_Rectus">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RIR-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.031699999999999999 -0.0023999999999999998 -0.016</location>
								</PathPoint>
								<PathPoint name="RIL-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0041999999999999997 -0.012800000000000001 -0.0041999999999999997</location>
								</PathPoint>
								<PathPoint name="RIR-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0080499999999999999 -0.010200000000000001 0</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>1.4269000000000001</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.045490000000000003</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0047999999999999996</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>4.1436999999999999</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.044900000000000002</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<Millard2012EquilibriumMuscle name="r_Superior_Oblique">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RIR-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.030834199999999999 0.00114521 -0.016440199999999999</location>
								</PathPoint>
								<PathPoint name="RSO-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.0082000000000000007 0.012200000000000001 -0.0152</location>
								</PathPoint>
								<PathPoint name="RSO-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0044000000000000003 0.010999999999999999 0.0028999999999999998</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap2</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>0.60309999999999997</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.039559999999999998</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.026499999999999999</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>4.7648000000000001</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.061370000000000001</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<Millard2012EquilibriumMuscle name="r_Inferior_Oblique">
					<!--Flag indicating whether the force is applied or not. If true the forceis applied to the MultibodySystem otherwise the force is not applied.NOTE: Prior to OpenSim 4.0, this behavior was controlled by the 'isDisabled' property, where 'true' meant that force was not being applied. Thus, if 'isDisabled' is true, then 'appliesForce` is false.-->
					<appliesForce>true</appliesForce>
					<!--The set of points defining the path of the actuator.-->
					<GeometryPath>
						<!--The set of points defining the path-->
						<PathPointSet>
							<objects>
								<PathPoint name="RIO-Origin-P1">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>0.011299999999999999 -0.0154 -0.0111</location>
								</PathPoint>
								<PathPoint name="RIO-Pulley-P2">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../ground</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0071799999999999998 -0.0135 0</location>
								</PathPoint>
								<PathPoint name="RIO-Insertion-P3">
									<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame in which this path point is defined.).-->
									<socket_parent_frame_connectee_name>../../../r_eye</socket_parent_frame_connectee_name>
									<!--The fixed location of the path point expressed in its parent frame.-->
									<location>-0.0080000000000000002 0 0.0089999999999999993</location>
								</PathPoint>
							</objects>
							<groups />
						</PathPointSet>
						<!--The wrap objects that are associated with this path-->
						<PathWrapSet>
							<objects>
								<PathWrap name="pathwrap">
									<!--A WrapObject that this PathWrap interacts with.-->
									<wrap_object>right_eye_wrap2</wrap_object>
									<!--The wrapping method used to solve the path around the wrap object.-->
									<method>axial</method>
									<!--The range of indices to use to compute the path over the wrap object.-->
									<range>-1 -1</range>
								</PathWrap>
							</objects>
							<groups />
						</PathWrapSet>
						<!--Default appearance attributes for this GeometryPath-->
						<Appearance>
							<!--The color, (red, green, blue), [0, 1], used to display the geometry. -->
							<color>0.80000000000000004 0.10000000000000001 0.10000000000000001</color>
						</Appearance>
					</GeometryPath>
					<!--The maximum force this actuator can produce.-->
					<optimal_force>1</optimal_force>
					<!--Maximum isometric force that the fibers can generate-->
					<max_isometric_force>0.55900000000000005</max_isometric_force>
					<!--Optimal length of the muscle fibers-->
					<optimal_fiber_length>0.041099999999999998</optimal_fiber_length>
					<!--Resting length of the tendon-->
					<tendon_slack_length>0.0015</tendon_slack_length>
					<!--Angle between tendon and fibers at optimal fiber length expressed in radians-->
					<pennation_angle_at_optimal>0</pennation_angle_at_optimal>
					<!--Maximum contraction velocity of the fibers, in optimal fiberlengths/second-->
					<max_contraction_velocity>4.5862999999999996</max_contraction_velocity>
					<!--Compute muscle dynamics ignoring tendon compliance. Tendon is assumed to be rigid.-->
					<ignore_tendon_compliance>true</ignore_tendon_compliance>
					<!--Compute muscle dynamics ignoring activation dynamics. Activation is equivalent to excitation.-->
					<ignore_activation_dynamics>false</ignore_activation_dynamics>
					<!--The linear damping of the fiber.-->
					<fiber_damping>0</fiber_damping>
					<!--Assumed initial activation level if none is assigned.-->
					<default_activation>0</default_activation>
					<!--Assumed initial fiber length if none is assigned.-->
					<default_fiber_length>0.037740000000000003</default_fiber_length>
					<!--Activation time constant (in seconds).-->
					<activation_time_constant>0.0050000000000000001</activation_time_constant>
					<!--Deactivation time constant (in seconds).-->
					<deactivation_time_constant>0.0050000000000000001</deactivation_time_constant>
					<!--Activation lower bound.-->
					<minimum_activation>0</minimum_activation>
					<!--Active-force-length curve.-->
					<ActiveForceLengthCurve>
						<!--Normalized fiber length where the steep ascending limb starts-->
						<min_norm_active_fiber_length>0.55000000000000004</min_norm_active_fiber_length>
						<!--Normalized fiber length where the steep ascending limb transitions to the shallow ascending limb-->
						<transition_norm_fiber_length>0.69999999999999996</transition_norm_fiber_length>
						<!--Normalized fiber length where the descending limb ends-->
						<max_norm_active_fiber_length>1.8</max_norm_active_fiber_length>
						<!--Slope of the shallow ascending limb-->
						<shallow_ascending_slope>2.3999999999999999</shallow_ascending_slope>
						<!--Minimum value of the active-force-length curve-->
						<minimum_value>0</minimum_value>
					</ActiveForceLengthCurve>
					<!--Force-velocity curve.-->
					<ForceVelocityCurve>
						<!--Curve slope at the maximum normalized concentric (shortening) velocity (normalized velocity of -1)-->
						<concentric_slope_at_vmax>0</concentric_slope_at_vmax>
						<!--Curve slope just before reaching concentric_slope_at_vmax-->
						<concentric_slope_near_vmax>0.25</concentric_slope_near_vmax>
						<!--Curve slope at isometric (normalized velocity of 0)-->
						<isometric_slope>5</isometric_slope>
						<!--Curve slope at the maximum normalized eccentric (lengthening) velocity (normalized velocity of 1)-->
						<eccentric_slope_at_vmax>0</eccentric_slope_at_vmax>
						<!--Curve slope just before reaching eccentric_slope_at_vmax-->
						<eccentric_slope_near_vmax>0.14999999999999999</eccentric_slope_near_vmax>
						<!--Curve value at the maximum normalized eccentric contraction velocity-->
						<max_eccentric_velocity_force_multiplier>1.3999999999999999</max_eccentric_velocity_force_multiplier>
						<!--Concentric curve shape, from linear (0) to maximal curve (1)-->
						<concentric_curviness>0.59999999999999998</concentric_curviness>
						<!--Eccentric curve shape, from linear (0) to maximal curve (1)-->
						<eccentric_curviness>0.90000000000000002</eccentric_curviness>
					</ForceVelocityCurve>
					<!--Passive-force-length curve.-->
					<FiberForceLengthCurve>
						<!--Fiber strain at zero force-->
						<strain_at_zero_force>-0.17999999999999999</strain_at_zero_force>
						<!--Fiber strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>0.40000000000000002</strain_at_one_norm_force>
						<!--Fiber stiffness at the end of the low-force region-->
						<stiffness_at_low_force></stiffness_at_low_force>
						<!--Fiber stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Fiber curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</FiberForceLengthCurve>
					<!--Tendon-force-length curve.-->
					<TendonForceLengthCurve>
						<!--Tendon strain at a tension of 1 normalized force-->
						<strain_at_one_norm_force>1</strain_at_one_norm_force>
						<!--Tendon stiffness at a tension of 1 normalized force-->
						<stiffness_at_one_norm_force></stiffness_at_one_norm_force>
						<!--Normalized force developed at the end of the toe region-->
						<norm_force_at_toe_end></norm_force_at_toe_end>
						<!--Tendon curve bend, from linear (0) to maximum bend (1)-->
						<curviness></curviness>
					</TendonForceLengthCurve>
				</Millard2012EquilibriumMuscle>
				<ExpressionBasedCoordinateForce name="add_adb_tissue">
					<!--Coordinate (name) to apply force to.-->
					<coordinate>r_eye_add_abd</coordinate>
					<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
					<expression>-0.002225*q-34.5297*0.0001*q^3-1*0.002*qdot</expression>
				</ExpressionBasedCoordinateForce>
				<ExpressionBasedCoordinateForce name="sup_inf_tissue">
					<!--Coordinate (name) to apply force to.-->
					<coordinate>r_eye_sup_inf</coordinate>
					<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
					<expression>-0.002225*q-34.5297*0.0001*q^3-1*0.002*qdot</expression>
				</ExpressionBasedCoordinateForce>
				<ExpressionBasedCoordinateForce name="inc_exc_tissue">
					<!--Coordinate (name) to apply force to.-->
					<coordinate>r_eye_inc_exc</coordinate>
					<!--Expression of the force magnitude as a function of the coordinate value (q)and its time derivative (qdot). Note, expression cannot have any whitespaceseparating characters-->
					<expression>-0.002225*q-34.5297*0.0001*q^3-1*0.002*qdot</expression>
				</ExpressionBasedCoordinateForce>
			</objects>
		</ForceSet>
		<!--Markers in the model.-->
		<MarkerSet>
			<objects>
				<Marker name="r_eye_marker">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../r_eye</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.29999999999999999 0 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
				<Marker name="l_eye_marker">
					<!--Path to a Component that satisfies the Socket 'parent_frame' of type PhysicalFrame (description: The frame to which this station is fixed.).-->
					<socket_parent_frame_connectee_name>../l_eye</socket_parent_frame_connectee_name>
					<!--The fixed location of the station expressed in its parent frame.-->
					<location>0.29999999999999999 0 0</location>
					<!--Flag (true or false) specifying whether the marker is fixed in its parent frame during the marker placement step of scaling.  If false, the marker is free to move within its parent Frame to match its experimental counterpart.-->
					<fixed>false</fixed>
				</Marker>
			</objects>
			<groups />
		</MarkerSet>
		<!--Geometry to be used in contact forces.-->
		<ContactGeometrySet>
			<objects />
			<groups />
		</ContactGeometrySet>
		<!--Additional components in the model.-->
		<ComponentSet>
			<objects />
			<groups />
		</ComponentSet>
		<!--Probes in the model.-->
		<ProbeSet>
			<objects />
			<groups />
		</ProbeSet>
	</Model>
</OpenSimDocument>
